<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="true">

	<description>spring invoker服务</description>

	<bean id="httpInvokerRequestExecutor"
		class="org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor">
		<property name="connectTimeout" value="3000" />
		<property name="readTimeout" value="60000" />
	</bean>

	<bean id="userService"
		class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceUrl"
			value="http://127.0.0.1:8080/spring-httpinvoker-demo/remoting/userService" />
		<property name="serviceInterface"
			value="cn.slimsmart.spring.httpinvoker.demo.UserService" />
		<!--  默认HttpInvokerProxy使用了JDK的HTTP功能，但是了你也可以使用Apache的HttpComponents客户端来设置httpInvokerRequestExecutor属性  -->
		<property name="httpInvokerRequestExecutor" ref="httpInvokerRequestExecutor" />
	</bean>
</beans>
